The TreeDS data structure

- A TreeDS data structure contains a root node, and every node can have a left and right child.
- Simply, a TreeDS is a collection of nodes that edges(-) that connect them.

Each node can have..
Parent and Child node

Tree Traversals
- Reading/Processing the data of node exactly once in some order in a TreeDS

Types of Tree Traversals

Breadth First Traversal (level order)
 - Reading the data in the nodes of a TreeDS by moving in a level by level fashion

 ALGORITHM of BFT (LEVEL ORDER TREE TRAVERSAL)
 1. Create a empty QueueDS
 2. Create a variable, temp_node = root. START FROM ROOT!!
 3. Loop while temp_node != null {
   a) print temp_node -> data
   b) enqueue temp_node's children (first left then right children) to QueueDS
   c) dequeue a node from QueueDS and assign its value to temp_node

Depth First Traversal
  -  Inorder (Left, Root, Right)
  -  Preorder (Root, Left, Right)
  -  Postorder (Left, Right, Root)